require: rubocop-performance

AllCops:
  TargetRubyVersion: 2.6
  TargetRailsVersion: 6.0

  # RuboCop has a bunch of cops enabled by default. This setting tells RuboCop
  # to ignore them, so only the ones explicitly set in this file are enabled.
  DisabledByDefault: true
  Exclude:
    - 'bin/**/*'
    - 'db/schema.rb'
    - 'db/migrate/*'

Rails:
  Enabled: true

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

# Do not use braces for hash literals when they are the last argument of a
# method call.
Style/BracesAroundHashParameters:
  Enabled: true

# Align `when` with `case`.
Layout/CaseIndentation:
  Enabled: true

# Align comments with method definitions.
Layout/CommentIndentation:
  Enabled: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

# In a regular class definition, no empty lines around the body.
Layout/EmptyLinesAroundClassBody:
  Enabled: true

# In a regular method definition, no empty lines around the body.
Layout/EmptyLinesAroundMethodBody:
  Enabled: true

# In a regular module definition, no empty lines around the body.
Layout/EmptyLinesAroundModuleBody:
  Enabled: true

# In a regular module definition, no empty lines around the body.
Layout/EmptyLinesAroundBlockBody:
  Enabled: true

# In a regular module definition, no double empty lines around the body.
Layout/EmptyLines:
  Enabled: true

Layout/IndentFirstArgument:
  Enabled: true

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true

# Method definitions after `private` or `protected` isolated calls need one
# extra level of indentation.
Layout/IndentationConsistency:
  Enabled: true

Layout/AccessModifierIndentation:
  Enabled: true

# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true

Layout/SpaceBeforeFirstArg:
    Enabled: true

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true

# Use `{ a: 1 }` not `{a:1}`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceInsideParens:
  Enabled: true

# Check quotes usage according to lint rule below.
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: single_quotes

# Detect hard tabs, no hard tabs.
Layout/Tab:
  Enabled: true

# Blank lines should not have any spaces.
Layout/TrailingBlankLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable

# Use quotes for string literals when they are enough.
Style/UnneededPercentQ:
  Enabled: true

# Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
Lint/RequireParentheses:
  Enabled: true

# Checks for excessive nesting of conditional and looping constructs.
Metrics/BlockNesting:
  Enabled: true
  Max: 3

# Checks if the length of a method exceeds some maximum value
Metrics/MethodLength:
  Enabled: true
  Max: 45
  CountComments: false
  Exclude:
    - 'config/routes.rb'

# Identifies places where sort { |a, b| a.foo <=> b.foo } can be replaced by
# sort_by(&:foo).
Performance/CompareWithBlock:
  Enabled: true

# Identify usages of count on an Enumerable that follow calls to select or reject.
Performance/Count:
  Enabled: true

# Identify usages of select.first, select.last, find_all.first, and find_all.last
# and change them to use detect instead.
Performance/Detect:
  Enabled: true

# Enforces the consistent use of action filter methods
Rails/ActionFilter:
  Enabled: true
  EnforcedStyle: action
  SupportedStyles:
    - action
    - filter
  Include:
    - 'app/controllers/**/*.rb'

# Checks that jobs subclass ApplicationJob with Rails 5.0
Rails/ApplicationJob:
  Enabled: true

# Checks that models subclass ApplicationRecord with Rails 5.0
Rails/ApplicationRecord:
  Enabled: true

# Checks for the correct use of Date methods, such as Date.today, Date.current etc.
Rails/Date:
  Enabled: true

# Identify usages of all.each and change them to use all.find_each instead.
Rails/FindEach:
  Enabled: true

# Identify usages of where.first and change them to use find_by instead.
Rails/FindBy:
  Enabled: true

# Checks for scope calls where it was passed a method (usually a scope)
# instead of a lambda/proc.
Rails/ScopeArgs:
  Enabled: true

Rails/HttpPositionalArguments:
  Enabled: true

Rails/RelativeDateConstant:
  Enabled: true

Rails/UniqBeforePluck:
  Enabled: true

Rails/Validation:
  Enabled: true
